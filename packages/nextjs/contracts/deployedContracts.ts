/**
 * This file is autogenerated by Scaffold-ETH.
 * You should not edit it manually or your changes might be overwritten.
 */
import { GenericContractsDeclaration } from "~~/utils/scaffold-eth/contract";

const deployedContracts = {
  31337: {
    OneNumber: {
      address: "0x5FbDB2315678afecb367f032d93F642f64180aa3",
      abi: [
        {
          inputs: [],
          name: "BlindedNumberMissing",
          type: "error",
        },
        {
          inputs: [],
          name: "BlindedNumberTooLate",
          type: "error",
        },
        {
          inputs: [],
          name: "EndGameTooEarly",
          type: "error",
        },
        {
          inputs: [],
          name: "GameEnded",
          type: "error",
        },
        {
          inputs: [],
          name: "InvalidCost",
          type: "error",
        },
        {
          inputs: [],
          name: "InvalidGame",
          type: "error",
        },
        {
          inputs: [],
          name: "NoPlayers",
          type: "error",
        },
        {
          inputs: [],
          name: "OnlyOneNumber",
          type: "error",
        },
        {
          inputs: [],
          name: "RevealIncorrect",
          type: "error",
        },
        {
          inputs: [],
          name: "RevealTooEarly",
          type: "error",
        },
        {
          inputs: [],
          name: "RevealTooLate",
          type: "error",
        },
        {
          anonymous: false,
          inputs: [
            {
              indexed: false,
              internalType: "uint256",
              name: "gameId",
              type: "uint256",
            },
          ],
          name: "GameCreated",
          type: "event",
        },
        {
          inputs: [
            {
              internalType: "uint256",
              name: "gameId",
              type: "uint256",
            },
          ],
          name: "endGame",
          outputs: [],
          stateMutability: "nonpayable",
          type: "function",
        },
        {
          inputs: [
            {
              internalType: "uint256",
              name: "",
              type: "uint256",
            },
          ],
          name: "games",
          outputs: [
            {
              internalType: "uint72",
              name: "cost",
              type: "uint72",
            },
            {
              internalType: "uint32",
              name: "blindDuration",
              type: "uint32",
            },
            {
              internalType: "uint32",
              name: "revealDuration",
              type: "uint32",
            },
            {
              internalType: "uint32",
              name: "start",
              type: "uint32",
            },
            {
              internalType: "uint88",
              name: "prize",
              type: "uint88",
            },
          ],
          stateMutability: "view",
          type: "function",
        },
        {
          inputs: [
            {
              internalType: "uint72",
              name: "cost",
              type: "uint72",
            },
            {
              internalType: "uint32",
              name: "blindDuration",
              type: "uint32",
            },
            {
              internalType: "uint32",
              name: "revealDuration",
              type: "uint32",
            },
          ],
          name: "newGame",
          outputs: [
            {
              internalType: "uint256",
              name: "gameId",
              type: "uint256",
            },
          ],
          stateMutability: "nonpayable",
          type: "function",
        },
        {
          inputs: [],
          name: "numGames",
          outputs: [
            {
              internalType: "uint256",
              name: "",
              type: "uint256",
            },
          ],
          stateMutability: "view",
          type: "function",
        },
        {
          inputs: [
            {
              internalType: "uint256",
              name: "gameId",
              type: "uint256",
            },
            {
              internalType: "uint256",
              name: "number",
              type: "uint256",
            },
            {
              internalType: "string",
              name: "secret",
              type: "string",
            },
          ],
          name: "revealNumber",
          outputs: [],
          stateMutability: "nonpayable",
          type: "function",
        },
        {
          inputs: [
            {
              internalType: "uint256",
              name: "gameId",
              type: "uint256",
            },
            {
              internalType: "uint256",
              name: "number",
              type: "uint256",
            },
            {
              internalType: "bytes32",
              name: "secret",
              type: "bytes32",
            },
          ],
          name: "revealNumber",
          outputs: [],
          stateMutability: "nonpayable",
          type: "function",
        },
        {
          inputs: [
            {
              internalType: "uint256",
              name: "gameId",
              type: "uint256",
            },
            {
              internalType: "bytes32",
              name: "blindedNumber",
              type: "bytes32",
            },
          ],
          name: "setBlindedNumber",
          outputs: [],
          stateMutability: "payable",
          type: "function",
        },
      ],
      inheritedFunctions: {},
    },
  },
} as const;

export default deployedContracts satisfies GenericContractsDeclaration;
